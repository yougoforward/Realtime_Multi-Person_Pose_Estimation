layer {
  name: "data"
  type: "CPMData"
  top: "data"
  top: "label"
  data_param {
    source: "/media/D/Realtime_Multi-Person_Pose_Estimation/training/COCO_kpt/lmdb_trainVal"
    batch_size: 10
    backend: LMDB
  }
  cpm_transform_param {
    stride: 4
    max_rotate_degree: 40.0
    visualize: false
    crop_size_x: 384
    crop_size_y: 384
    scale_prob: 1.0
    scale_min: 0.5
    scale_max: 1.10000002384
    target_dist: 0.600000023842
    center_perterb_max: 40.0
    do_clahe: false
    num_parts: 56
    np_in_lmdb: 17
  }
}
layer {
  name: "vec_weight"
  type: "Slice"
  bottom: "label"
  top: "vec_weight"
  top: "heat_weight"
  top: "vec_temp"
  top: "heat_temp"
  slice_param {
    slice_point: 38
    slice_point: 57
    slice_point: 95
    axis: 1
  }
}
layer {
  name: "label_vec"
  type: "Eltwise"
  bottom: "vec_weight"
  bottom: "vec_temp"
  top: "label_vec"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "label_heat"
  type: "Eltwise"
  bottom: "heat_weight"
  bottom: "heat_temp"
  top: "label_heat"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "image"
  type: "Slice"
  bottom: "data"
  top: "image"
  top: "center_map"
  slice_param {
    slice_point: 3
    axis: 1
  }
}
layer {
  name: "silence2"
  type: "Silence"
  bottom: "center_map"
}

layer {
	bottom: "image"
	top: "conv1"
	name: "conv1"
	type: "Convolution"
	convolution_param {
		num_output: 64
		kernel_size: 7
		pad: 3
		stride: 2
	}
}

layer {
	bottom: "conv1"
	top: "conv1"
	name: "bn_conv1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "conv1"
	top: "conv1"
	name: "scale_conv1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "conv1"
	top: "conv1"
	name: "conv1_relu"
	type: "ReLU"
}

layer {
	bottom: "conv1"
	top: "pool1"
	name: "pool1"
	type: "Pooling"
	pooling_param {
		kernel_size: 3
		stride: 2
		pool: MAX
	}
}

layer {
	bottom: "pool1"
	top: "res2a_branch1"
	name: "res2a_branch1"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2a_branch1"
	top: "res2a_branch1"
	name: "bn2a_branch1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res2a_branch1"
	top: "res2a_branch1"
	name: "scale2a_branch1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "pool1"
	top: "res2a_branch2a"
	name: "res2a_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 64
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2a_branch2a"
	top: "res2a_branch2a"
	name: "bn2a_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res2a_branch2a"
	top: "res2a_branch2a"
	name: "scale2a_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2a_branch2a"
	top: "res2a_branch2a"
	name: "res2a_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res2a_branch2a"
	top: "res2a_branch2b"
	name: "res2a_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 64
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2a_branch2b"
	top: "res2a_branch2b"
	name: "bn2a_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res2a_branch2b"
	top: "res2a_branch2b"
	name: "scale2a_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2a_branch2b"
	top: "res2a_branch2b"
	name: "res2a_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res2a_branch2b"
	top: "res2a_branch2c"
	name: "res2a_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2a_branch2c"
	top: "res2a_branch2c"
	name: "bn2a_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res2a_branch2c"
	top: "res2a_branch2c"
	name: "scale2a_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2a_branch1"
	bottom: "res2a_branch2c"
	top: "res2a"
	name: "res2a"
	type: "Eltwise"
}

layer {
	bottom: "res2a"
	top: "res2a"
	name: "res2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res2a"
	top: "res2b_branch2a"
	name: "res2b_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 64
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2b_branch2a"
	top: "res2b_branch2a"
	name: "bn2b_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res2b_branch2a"
	top: "res2b_branch2a"
	name: "scale2b_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2b_branch2a"
	top: "res2b_branch2a"
	name: "res2b_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res2b_branch2a"
	top: "res2b_branch2b"
	name: "res2b_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 64
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2b_branch2b"
	top: "res2b_branch2b"
	name: "bn2b_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res2b_branch2b"
	top: "res2b_branch2b"
	name: "scale2b_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2b_branch2b"
	top: "res2b_branch2b"
	name: "res2b_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res2b_branch2b"
	top: "res2b_branch2c"
	name: "res2b_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2b_branch2c"
	top: "res2b_branch2c"
	name: "bn2b_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res2b_branch2c"
	top: "res2b_branch2c"
	name: "scale2b_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2a"
	bottom: "res2b_branch2c"
	top: "res2b"
	name: "res2b"
	type: "Eltwise"
}

layer {
	bottom: "res2b"
	top: "res2b"
	name: "res2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res2b"
	top: "res2c_branch2a"
	name: "res2c_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 64
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2c_branch2a"
	top: "res2c_branch2a"
	name: "bn2c_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res2c_branch2a"
	top: "res2c_branch2a"
	name: "scale2c_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2c_branch2a"
	top: "res2c_branch2a"
	name: "res2c_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res2c_branch2a"
	top: "res2c_branch2b"
	name: "res2c_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 64
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2c_branch2b"
	top: "res2c_branch2b"
	name: "bn2c_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res2c_branch2b"
	top: "res2c_branch2b"
	name: "scale2c_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2c_branch2b"
	top: "res2c_branch2b"
	name: "res2c_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res2c_branch2b"
	top: "res2c_branch2c"
	name: "res2c_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2c_branch2c"
	top: "res2c_branch2c"
	name: "bn2c_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res2c_branch2c"
	top: "res2c_branch2c"
	name: "scale2c_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2b"
	bottom: "res2c_branch2c"
	top: "res2c"
	name: "res2c"
	type: "Eltwise"
}

layer {
	bottom: "res2c"
	top: "res2c"
	name: "res2c_relu"
	type: "ReLU"
}

layer {
	bottom: "res2c"
	top: "res3a_branch1"
	name: "res3a_branch1"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 2
		bias_term: false
	}
}

layer {
	bottom: "res3a_branch1"
	top: "res3a_branch1"
	name: "bn3a_branch1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3a_branch1"
	top: "res3a_branch1"
	name: "scale3a_branch1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2c"
	top: "res3a_branch2a"
	name: "res3a_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 2
		bias_term: false
	}
}

layer {
	bottom: "res3a_branch2a"
	top: "res3a_branch2a"
	name: "bn3a_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3a_branch2a"
	top: "res3a_branch2a"
	name: "scale3a_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3a_branch2a"
	top: "res3a_branch2a"
	name: "res3a_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res3a_branch2a"
	top: "res3a_branch2b"
	name: "res3a_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3a_branch2b"
	top: "res3a_branch2b"
	name: "bn3a_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3a_branch2b"
	top: "res3a_branch2b"
	name: "scale3a_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3a_branch2b"
	top: "res3a_branch2b"
	name: "res3a_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res3a_branch2b"
	top: "res3a_branch2c"
	name: "res3a_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3a_branch2c"
	top: "res3a_branch2c"
	name: "bn3a_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3a_branch2c"
	top: "res3a_branch2c"
	name: "scale3a_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3a_branch1"
	bottom: "res3a_branch2c"
	top: "res3a"
	name: "res3a"
	type: "Eltwise"
}

layer {
	bottom: "res3a"
	top: "res3a"
	name: "res3a_relu"
	type: "ReLU"
}

layer {
	bottom: "res3a"
	top: "res3b_branch2a"
	name: "res3b_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3b_branch2a"
	top: "res3b_branch2a"
	name: "bn3b_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3b_branch2a"
	top: "res3b_branch2a"
	name: "scale3b_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3b_branch2a"
	top: "res3b_branch2a"
	name: "res3b_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res3b_branch2a"
	top: "res3b_branch2b"
	name: "res3b_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3b_branch2b"
	top: "res3b_branch2b"
	name: "bn3b_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3b_branch2b"
	top: "res3b_branch2b"
	name: "scale3b_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3b_branch2b"
	top: "res3b_branch2b"
	name: "res3b_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res3b_branch2b"
	top: "res3b_branch2c"
	name: "res3b_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3b_branch2c"
	top: "res3b_branch2c"
	name: "bn3b_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3b_branch2c"
	top: "res3b_branch2c"
	name: "scale3b_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3a"
	bottom: "res3b_branch2c"
	top: "res3b"
	name: "res3b"
	type: "Eltwise"
}

layer {
	bottom: "res3b"
	top: "res3b"
	name: "res3b_relu"
	type: "ReLU"
}

layer {
	bottom: "res3b"
	top: "res3c_branch2a"
	name: "res3c_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3c_branch2a"
	top: "res3c_branch2a"
	name: "bn3c_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3c_branch2a"
	top: "res3c_branch2a"
	name: "scale3c_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3c_branch2a"
	top: "res3c_branch2a"
	name: "res3c_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res3c_branch2a"
	top: "res3c_branch2b"
	name: "res3c_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3c_branch2b"
	top: "res3c_branch2b"
	name: "bn3c_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3c_branch2b"
	top: "res3c_branch2b"
	name: "scale3c_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3c_branch2b"
	top: "res3c_branch2b"
	name: "res3c_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res3c_branch2b"
	top: "res3c_branch2c"
	name: "res3c_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3c_branch2c"
	top: "res3c_branch2c"
	name: "bn3c_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3c_branch2c"
	top: "res3c_branch2c"
	name: "scale3c_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3b"
	bottom: "res3c_branch2c"
	top: "res3c"
	name: "res3c"
	type: "Eltwise"
}

layer {
	bottom: "res3c"
	top: "res3c"
	name: "res3c_relu"
	type: "ReLU"
}

layer {
	bottom: "res3c"
	top: "res3d_branch2a"
	name: "res3d_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3d_branch2a"
	top: "res3d_branch2a"
	name: "bn3d_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3d_branch2a"
	top: "res3d_branch2a"
	name: "scale3d_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3d_branch2a"
	top: "res3d_branch2a"
	name: "res3d_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res3d_branch2a"
	top: "res3d_branch2b"
	name: "res3d_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3d_branch2b"
	top: "res3d_branch2b"
	name: "bn3d_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3d_branch2b"
	top: "res3d_branch2b"
	name: "scale3d_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3d_branch2b"
	top: "res3d_branch2b"
	name: "res3d_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res3d_branch2b"
	top: "res3d_branch2c"
	name: "res3d_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3d_branch2c"
	top: "res3d_branch2c"
	name: "bn3d_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res3d_branch2c"
	top: "res3d_branch2c"
	name: "scale3d_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3c"
	bottom: "res3d_branch2c"
	top: "res3d"
	name: "res3d"
	type: "Eltwise"
}

layer {
	bottom: "res3d"
	top: "res3d"
	name: "res3d_relu"
	type: "ReLU"
}

layer {
	bottom: "res3d"
	top: "res4a_branch1"
	name: "res4a_branch1"
	type: "Convolution"
	convolution_param {
		num_output: 1024
		kernel_size: 1
		pad: 0
		stride: 2
		bias_term: false
	}
}

layer {
	bottom: "res4a_branch1"
	top: "res4a_branch1"
	name: "bn4a_branch1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4a_branch1"
	top: "res4a_branch1"
	name: "scale4a_branch1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3d"
	top: "res4a_branch2a"
	name: "res4a_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 2
		bias_term: false
	}
}

layer {
	bottom: "res4a_branch2a"
	top: "res4a_branch2a"
	name: "bn4a_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4a_branch2a"
	top: "res4a_branch2a"
	name: "scale4a_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4a_branch2a"
	top: "res4a_branch2a"
	name: "res4a_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res4a_branch2a"
	top: "res4a_branch2b"
	name: "res4a_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4a_branch2b"
	top: "res4a_branch2b"
	name: "bn4a_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4a_branch2b"
	top: "res4a_branch2b"
	name: "scale4a_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4a_branch2b"
	top: "res4a_branch2b"
	name: "res4a_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res4a_branch2b"
	top: "res4a_branch2c"
	name: "res4a_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 1024
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4a_branch2c"
	top: "res4a_branch2c"
	name: "bn4a_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4a_branch2c"
	top: "res4a_branch2c"
	name: "scale4a_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4a_branch1"
	bottom: "res4a_branch2c"
	top: "res4a"
	name: "res4a"
	type: "Eltwise"
}

layer {
	bottom: "res4a"
	top: "res4a"
	name: "res4a_relu"
	type: "ReLU"
}

layer {
	bottom: "res4a"
	top: "res4b_branch2a"
	name: "res4b_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4b_branch2a"
	top: "res4b_branch2a"
	name: "bn4b_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4b_branch2a"
	top: "res4b_branch2a"
	name: "scale4b_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4b_branch2a"
	top: "res4b_branch2a"
	name: "res4b_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res4b_branch2a"
	top: "res4b_branch2b"
	name: "res4b_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4b_branch2b"
	top: "res4b_branch2b"
	name: "bn4b_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4b_branch2b"
	top: "res4b_branch2b"
	name: "scale4b_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4b_branch2b"
	top: "res4b_branch2b"
	name: "res4b_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res4b_branch2b"
	top: "res4b_branch2c"
	name: "res4b_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 1024
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4b_branch2c"
	top: "res4b_branch2c"
	name: "bn4b_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4b_branch2c"
	top: "res4b_branch2c"
	name: "scale4b_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4a"
	bottom: "res4b_branch2c"
	top: "res4b"
	name: "res4b"
	type: "Eltwise"
}

layer {
	bottom: "res4b"
	top: "res4b"
	name: "res4b_relu"
	type: "ReLU"
}

layer {
	bottom: "res4b"
	top: "res4c_branch2a"
	name: "res4c_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4c_branch2a"
	top: "res4c_branch2a"
	name: "bn4c_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4c_branch2a"
	top: "res4c_branch2a"
	name: "scale4c_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4c_branch2a"
	top: "res4c_branch2a"
	name: "res4c_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res4c_branch2a"
	top: "res4c_branch2b"
	name: "res4c_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4c_branch2b"
	top: "res4c_branch2b"
	name: "bn4c_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4c_branch2b"
	top: "res4c_branch2b"
	name: "scale4c_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4c_branch2b"
	top: "res4c_branch2b"
	name: "res4c_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res4c_branch2b"
	top: "res4c_branch2c"
	name: "res4c_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 1024
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4c_branch2c"
	top: "res4c_branch2c"
	name: "bn4c_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4c_branch2c"
	top: "res4c_branch2c"
	name: "scale4c_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4b"
	bottom: "res4c_branch2c"
	top: "res4c"
	name: "res4c"
	type: "Eltwise"
}

layer {
	bottom: "res4c"
	top: "res4c"
	name: "res4c_relu"
	type: "ReLU"
}

layer {
	bottom: "res4c"
	top: "res4d_branch2a"
	name: "res4d_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4d_branch2a"
	top: "res4d_branch2a"
	name: "bn4d_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4d_branch2a"
	top: "res4d_branch2a"
	name: "scale4d_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4d_branch2a"
	top: "res4d_branch2a"
	name: "res4d_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res4d_branch2a"
	top: "res4d_branch2b"
	name: "res4d_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4d_branch2b"
	top: "res4d_branch2b"
	name: "bn4d_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4d_branch2b"
	top: "res4d_branch2b"
	name: "scale4d_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4d_branch2b"
	top: "res4d_branch2b"
	name: "res4d_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res4d_branch2b"
	top: "res4d_branch2c"
	name: "res4d_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 1024
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4d_branch2c"
	top: "res4d_branch2c"
	name: "bn4d_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4d_branch2c"
	top: "res4d_branch2c"
	name: "scale4d_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4c"
	bottom: "res4d_branch2c"
	top: "res4d"
	name: "res4d"
	type: "Eltwise"
}

layer {
	bottom: "res4d"
	top: "res4d"
	name: "res4d_relu"
	type: "ReLU"
}

layer {
	bottom: "res4d"
	top: "res4e_branch2a"
	name: "res4e_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4e_branch2a"
	top: "res4e_branch2a"
	name: "bn4e_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4e_branch2a"
	top: "res4e_branch2a"
	name: "scale4e_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4e_branch2a"
	top: "res4e_branch2a"
	name: "res4e_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res4e_branch2a"
	top: "res4e_branch2b"
	name: "res4e_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4e_branch2b"
	top: "res4e_branch2b"
	name: "bn4e_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4e_branch2b"
	top: "res4e_branch2b"
	name: "scale4e_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4e_branch2b"
	top: "res4e_branch2b"
	name: "res4e_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res4e_branch2b"
	top: "res4e_branch2c"
	name: "res4e_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 1024
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4e_branch2c"
	top: "res4e_branch2c"
	name: "bn4e_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4e_branch2c"
	top: "res4e_branch2c"
	name: "scale4e_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4d"
	bottom: "res4e_branch2c"
	top: "res4e"
	name: "res4e"
	type: "Eltwise"
}

layer {
	bottom: "res4e"
	top: "res4e"
	name: "res4e_relu"
	type: "ReLU"
}

layer {
	bottom: "res4e"
	top: "res4f_branch2a"
	name: "res4f_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4f_branch2a"
	top: "res4f_branch2a"
	name: "bn4f_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4f_branch2a"
	top: "res4f_branch2a"
	name: "scale4f_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4f_branch2a"
	top: "res4f_branch2a"
	name: "res4f_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res4f_branch2a"
	top: "res4f_branch2b"
	name: "res4f_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4f_branch2b"
	top: "res4f_branch2b"
	name: "bn4f_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4f_branch2b"
	top: "res4f_branch2b"
	name: "scale4f_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4f_branch2b"
	top: "res4f_branch2b"
	name: "res4f_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res4f_branch2b"
	top: "res4f_branch2c"
	name: "res4f_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 1024
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4f_branch2c"
	top: "res4f_branch2c"
	name: "bn4f_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res4f_branch2c"
	top: "res4f_branch2c"
	name: "scale4f_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4e"
	bottom: "res4f_branch2c"
	top: "res4f"
	name: "res4f"
	type: "Eltwise"
}

layer {
	bottom: "res4f"
	top: "res4f"
	name: "res4f_relu"
	type: "ReLU"
}

layer {
	bottom: "res4f"
	top: "res5a_branch1"
	name: "res5a_branch1"
	type: "Convolution"
	convolution_param {
		num_output: 2048
		kernel_size: 1
		pad: 0
		stride: 2
		bias_term: false
	}
}

layer {
	bottom: "res5a_branch1"
	top: "res5a_branch1"
	name: "bn5a_branch1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res5a_branch1"
	top: "res5a_branch1"
	name: "scale5a_branch1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4f"
	top: "res5a_branch2a"
	name: "res5a_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 2
		bias_term: false
	}
}

layer {
	bottom: "res5a_branch2a"
	top: "res5a_branch2a"
	name: "bn5a_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res5a_branch2a"
	top: "res5a_branch2a"
	name: "scale5a_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res5a_branch2a"
	top: "res5a_branch2a"
	name: "res5a_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res5a_branch2a"
	top: "res5a_branch2b"
	name: "res5a_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res5a_branch2b"
	top: "res5a_branch2b"
	name: "bn5a_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res5a_branch2b"
	top: "res5a_branch2b"
	name: "scale5a_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res5a_branch2b"
	top: "res5a_branch2b"
	name: "res5a_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res5a_branch2b"
	top: "res5a_branch2c"
	name: "res5a_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 2048
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res5a_branch2c"
	top: "res5a_branch2c"
	name: "bn5a_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res5a_branch2c"
	top: "res5a_branch2c"
	name: "scale5a_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res5a_branch1"
	bottom: "res5a_branch2c"
	top: "res5a"
	name: "res5a"
	type: "Eltwise"
}

layer {
	bottom: "res5a"
	top: "res5a"
	name: "res5a_relu"
	type: "ReLU"
}

layer {
	bottom: "res5a"
	top: "res5b_branch2a"
	name: "res5b_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res5b_branch2a"
	top: "res5b_branch2a"
	name: "bn5b_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res5b_branch2a"
	top: "res5b_branch2a"
	name: "scale5b_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res5b_branch2a"
	top: "res5b_branch2a"
	name: "res5b_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res5b_branch2a"
	top: "res5b_branch2b"
	name: "res5b_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res5b_branch2b"
	top: "res5b_branch2b"
	name: "bn5b_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res5b_branch2b"
	top: "res5b_branch2b"
	name: "scale5b_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res5b_branch2b"
	top: "res5b_branch2b"
	name: "res5b_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res5b_branch2b"
	top: "res5b_branch2c"
	name: "res5b_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 2048
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res5b_branch2c"
	top: "res5b_branch2c"
	name: "bn5b_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res5b_branch2c"
	top: "res5b_branch2c"
	name: "scale5b_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res5a"
	bottom: "res5b_branch2c"
	top: "res5b"
	name: "res5b"
	type: "Eltwise"
}

layer {
	bottom: "res5b"
	top: "res5b"
	name: "res5b_relu"
	type: "ReLU"
}

layer {
	bottom: "res5b"
	top: "res5c_branch2a"
	name: "res5c_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res5c_branch2a"
	top: "res5c_branch2a"
	name: "bn5c_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res5c_branch2a"
	top: "res5c_branch2a"
	name: "scale5c_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res5c_branch2a"
	top: "res5c_branch2a"
	name: "res5c_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res5c_branch2a"
	top: "res5c_branch2b"
	name: "res5c_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res5c_branch2b"
	top: "res5c_branch2b"
	name: "bn5c_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res5c_branch2b"
	top: "res5c_branch2b"
	name: "scale5c_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res5c_branch2b"
	top: "res5c_branch2b"
	name: "res5c_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res5c_branch2b"
	top: "res5c_branch2c"
	name: "res5c_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 2048
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res5c_branch2c"
	top: "res5c_branch2c"
	name: "bn5c_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "res5c_branch2c"
	top: "res5c_branch2c"
	name: "scale5c_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res5b"
	bottom: "res5c_branch2c"
	top: "res5c"
	name: "res5c"
	type: "Eltwise"
}

layer {
	bottom: "res5c"
	top: "res5c"
	name: "res5c_relu"
	type: "ReLU"
}

###################### CPN: GlobalNet :modified Feature Pyramid Network #####################


layer {
	bottom: "res5c"
	top: "newC5"
	name: "newC5"
	param {
		lr_mult: 1.0
	}
	param {
		lr_mult: 2.0
	}
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0.5 }

	}
}

layer {
	bottom: "newC5"
	top: "upP5"
	name: "conv1x1_upP5"
	param {
		lr_mult: 1.0
	}
	param {
		lr_mult: 2.0
	}
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0.5 }

	}
}
layer {
    name: "upP5"
	type: "Deconvolution"
    bottom: "upP5"
	top: "upP5"

    convolution_param {
    kernel_h : 4
    kernel_w : 4
    stride_h: 2
    stride_w: 2
    pad_h: 1
    pad_w: 1
    num_output: 256
    group: 256
    bias_term: false
     weight_filler {
      type: "bilinear"
    }
  }
  param { lr_mult: 0 decay_mult: 0 }

}

layer {
	bottom: "res4c"
	top: "newC4"
	name: "newC4"
	param {
		lr_mult: 1.0
	}
	param {
		lr_mult: 2.0
	}
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0.5 }

	}
}


layer {
    name: "P4"
    type: "Eltwise"
    bottom: "newC4"
    bottom: "upP5"
    top: "P4"
    eltwise_param {
        operation: SUM
    }
}


layer {
	bottom: "P4"
	top: "P4"
	name: "newP4"
	param {
		lr_mult: 1.0
	}
	param {
		lr_mult: 2.0
	}
	type: "Convolution"
	convolution_param {
		num_output: 256
		pad: 1
		kernel_size: 3
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0.5 }
	}
}

layer {
	bottom: "P4"
	top: "upP4"
	name: "conv1x1_upP4"
	param {
		lr_mult: 1.0
	}
	param {
		lr_mult: 2.0
	}
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0.5 }

	}
}
layer {
    name: "upP4"
	type: "Deconvolution"
    bottom: "upP4"
	top: "upP4"

    convolution_param {
    kernel_h : 4
    kernel_w : 4
    stride_h: 2
    stride_w: 2
    pad_h: 1
    pad_w: 1
    num_output: 256
    group: 256
    bias_term: false
     weight_filler {
      type: "bilinear"
    }
  }
  param { lr_mult: 0 decay_mult: 0 }

}

layer {
	bottom: "res3c"
	top: "newC3"
	name: "newC3"
	param {
		lr_mult: 1.0
	}
	param {
		lr_mult: 2.0
	}
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0.5 }

	}
}


layer {
    name: "P3"
    type: "Eltwise"
    bottom: "newC3"
    bottom: "upP4"
    top: "P3"
    eltwise_param {
        operation: SUM
    }
}


layer {
	bottom: "P3"
	top: "P3"
	name: "newP3"
	param {
		lr_mult: 1.0
	}
	param {
		lr_mult: 2.0
	}
	type: "Convolution"
	convolution_param {
		num_output: 256
		pad: 1
		kernel_size: 3
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0.5 }
	}
}

#========
layer {
	bottom: "P3"
	top: "upP3"
	name: "conv1x1_upP3"
	param {
		lr_mult: 1.0
	}
	param {
		lr_mult: 2.0
	}
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0.5 }

	}
}
layer {
    name: "upP3"
	type: "Deconvolution"
    bottom: "upP3"
	top: "upP3"

    convolution_param {
    kernel_h : 4
    kernel_w : 4
    stride_h: 2
    stride_w: 2
    pad_h: 1
    pad_w: 1
    num_output: 256
    group: 256
    bias_term: false
     weight_filler {
      type: "bilinear"
    }
  }
  param { lr_mult: 0 decay_mult: 0 }

}

layer {
	bottom: "res2c"
	top: "newC2"
	name: "newC2"
	param {
		lr_mult: 1.0
	}
	param {
		lr_mult: 2.0
	}
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0.5 }

	}
}


layer {
    name: "P2"
    type: "Eltwise"
    bottom: "newC2"
    bottom: "upP3"
    top: "P2"
    eltwise_param {
        operation: SUM
    }
}


layer {
	bottom: "P2"
	top: "P2"
	name: "newP2"
	param {
		lr_mult: 1.0
	}
	param {
		lr_mult: 2.0
	}
	type: "Convolution"
	convolution_param {
		num_output: 256
		pad: 1
		kernel_size: 3
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0.5 }
	}
}
#======================fpn intermediate supervised loss============================


#========== CPN:RefineNet:modified Hypernet with bottleneck ========

#====bottleneck5upP5===================
layer {
	bottom: "newC5"
	top: "bottleneck5a_branch2a"
	name: "bottleneck5a_branch2a"
	type: "Convolution"
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
    convolution_param {
        num_output: 64
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
    }
}

layer {
	bottom: "bottleneck5a_branch2a"
	top: "bottleneck5a_branch2a"
	name: "bn_bottleneck5a_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck5a_branch2a"
	top: "bottleneck5a_branch2a"
	name: "scale_bottleneck5a_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck5a_branch2a"
	top: "bottleneck5a_branch2a"
	name: "bottleneck5a_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck5a_branch2a"
	top: "bottleneck5a_branch2b"
	name: "bottleneck5a_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 64
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
	}
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
}

layer {
	bottom: "bottleneck5a_branch2b"
	top: "bottleneck5a_branch2b"
	name: "bn_bottleneck5a_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck5a_branch2b"
	top: "bottleneck5a_branch2b"
	name: "scale_bottleneck5a_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck5a_branch2b"
	top: "bottleneck5a_branch2b"
	name: "bottleneck5a_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck5a_branch2b"
	top: "bottleneck5a_branch2c"
	name: "bottleneck5a_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
	}
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
}

layer {
	bottom: "bottleneck5a_branch2c"
	top: "bottleneck5a_branch2c"
	name: "bn_bottleneck5a_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck5a_branch2c"
	top: "bottleneck5a_branch2c"
	name: "scale_bottleneck5a_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "newC5"
	bottom: "bottleneck5a_branch2c"
	top: "bottleneck5a"
	name: "bottleneck5a"
	type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}

layer {
	bottom: "bottleneck5a"
	top: "bottleneck5a"
	name: "bottleneck5a_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck5a"
	top: "bottleneck5b_branch2a"
	name: "bottleneck5b_branch2a"
	type: "Convolution"
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
    convolution_param {
        num_output: 64
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
          }
    }
}

layer {
	bottom: "bottleneck5b_branch2a"
	top: "bottleneck5b_branch2a"
	name: "bn_bottleneck5b_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck5b_branch2a"
	top: "bottleneck5b_branch2a"
	name: "scale_bottleneck5b_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck5b_branch2a"
	top: "bottleneck5b_branch2a"
	name: "bottleneck5b_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck5b_branch2a"
	top: "bottleneck5b_branch2b"
	name: "bottleneck5b_branch2b"
	type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
    }
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
}

layer {
	bottom: "bottleneck5b_branch2b"
	top: "bottleneck5b_branch2b"
	name: "bn_bottleneck5b_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck5b_branch2b"
	top: "bottleneck5b_branch2b"
	name: "scale_bottleneck5b_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck5b_branch2b"
	top: "bottleneck5b_branch2b"
	name: "bottleneck5b_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck5b_branch2b"
	top: "bottleneck5b_branch2c"
	name: "bottleneck5b_branch2c"
	type: "Convolution"
	convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
    }
}

layer {
	bottom: "bottleneck5b_branch2c"
	top: "bottleneck5b_branch2c"
	name: "bn_bottleneck5b_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck5b_branch2c"
	top: "bottleneck5b_branch2c"
	name: "scale_bottleneck5b_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck5a"
	bottom: "bottleneck5b_branch2c"
	top: "bottleneck5b"
	name: "bottleneck5b"
	type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}

layer {
	bottom: "bottleneck5b"
	top: "bottleneck5b"
	name: "bottleneck5b_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck5b"
	top: "bottleneck5c_branch2a"
	name: "bottleneck5c_branch2a"
	type: "Convolution"
	param {
        lr_mult: 1.0
        decay_mult: 1
    }
    convolution_param {
        num_output: 128
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
          }
    }

}

layer {
	bottom: "bottleneck5c_branch2a"
	top: "bottleneck5c_branch2a"
	name: "bn_bottleneck5c_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck5c_branch2a"
	top: "bottleneck5c_branch2a"
	name: "scale_bottleneck5c_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck5c_branch2a"
	top: "bottleneck5c_branch2a"
	name: "bottleneck5c_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck5c_branch2a"
	top: "bottleneck5c_branch2b"
	name: "bottleneck5c_branch2b"
	type: "Convolution"
	convolution_param {
        num_output: 128
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
    }
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
}

layer {
	bottom: "bottleneck5c_branch2b"
	top: "bottleneck5c_branch2b"
	name: "bn_bottleneck5c_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck5c_branch2b"
	top: "bottleneck5c_branch2b"
	name: "scale_bottleneck5c_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck5c_branch2b"
	top: "bottleneck5c_branch2b"
	name: "bottleneck5c_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck5c_branch2b"
	top: "bottleneck5c_branch2c"
	name: "bottleneck5c_branch2c"
	type: "Convolution"
	convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
    }
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
}

layer {
	bottom: "bottleneck5c_branch2c"
	top: "bottleneck5c_branch2c"
	name: "bn_bottleneck5c_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck5c_branch2c"
	top: "bottleneck5c_branch2c"
	name: "scale_bottleneck5c_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck5b"
	bottom: "bottleneck5c_branch2c"
	top: "bottleneck5c"
	name: "bottleneck5c"
	type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}

layer {
	bottom: "bottleneck5c"
	top: "bottleneck5c"
	name: "bottleneck5c_relu"
	type: "ReLU"
}

layer {
    name: "bottleneck5upP5"
	type: "Deconvolution"
    bottom: "bottleneck5c"
	top: "bottleneck5upP5"

    convolution_param {
    kernel_h : 16
    kernel_w : 16
    stride_h: 8
    stride_w: 8
    pad_h: 4
    pad_w: 4
    num_output: 256
    group: 256
    bias_term: false
     weight_filler {
      type: "bilinear"
    }
  }
  param { lr_mult: 0 decay_mult: 0 }

}


#======bottleneck4upP4==============
layer {
	bottom: "P4"
	top: "bottleneck4a_branch2a"
	name: "bottleneck4a_branch2a"
	type: "Convolution"
	param {
        lr_mult: 1.0
        decay_mult: 1
    }
    convolution_param {
        num_output: 64
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
          }
    }
}

layer {
	bottom: "bottleneck4a_branch2a"
	top: "bottleneck4a_branch2a"
	name: "bn_bottleneck4a_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck4a_branch2a"
	top: "bottleneck4a_branch2a"
	name: "scale_bottleneck4a_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck4a_branch2a"
	top: "bottleneck4a_branch2a"
	name: "bottleneck4a_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck4a_branch2a"
	top: "bottleneck4a_branch2b"
	name: "bottleneck4a_branch2b"
	type: "Convolution"
	convolution_param {
        num_output: 64
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
    }
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
}

layer {
	bottom: "bottleneck4a_branch2b"
	top: "bottleneck4a_branch2b"
	name: "bn_bottleneck4a_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck4a_branch2b"
	top: "bottleneck4a_branch2b"
	name: "scale_bottleneck4a_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck4a_branch2b"
	top: "bottleneck4a_branch2b"
	name: "bottleneck4a_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck4a_branch2b"
	top: "bottleneck4a_branch2c"
	name: "bottleneck4a_branch2c"
	type: "Convolution"
	convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
    }
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
}

layer {
	bottom: "bottleneck4a_branch2c"
	top: "bottleneck4a_branch2c"
	name: "bn_bottleneck4a_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck4a_branch2c"
	top: "bottleneck4a_branch2c"
	name: "scale_bottleneck4a_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "P4"
	bottom: "bottleneck4a_branch2c"
	top: "bottleneck4a"
	name: "bottleneck4a"
	type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}

layer {
	bottom: "bottleneck4a"
	top: "bottleneck4a"
	name: "bottleneck4a_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck4a"
	top: "bottleneck4b_branch2a"
	name: "bottleneck4b_branch2a"
	type: "Convolution"
	param {
        lr_mult: 1.0
        decay_mult: 1
    }
    convolution_param {
        num_output: 128
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
          }
    }
}

layer {
	bottom: "bottleneck4b_branch2a"
	top: "bottleneck4b_branch2a"
	name: "bn_bottleneck4b_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck4b_branch2a"
	top: "bottleneck4b_branch2a"
	name: "scale_bottleneck4b_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck4b_branch2a"
	top: "bottleneck4b_branch2a"
	name: "bottleneck4b_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck4b_branch2a"
	top: "bottleneck4b_branch2b"
	name: "bottleneck4b_branch2b"
	type: "Convolution"
	convolution_param {
        num_output: 128
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
    }
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
}

layer {
	bottom: "bottleneck4b_branch2b"
	top: "bottleneck4b_branch2b"
	name: "bn_bottleneck4b_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck4b_branch2b"
	top: "bottleneck4b_branch2b"
	name: "scale_bottleneck4b_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck4b_branch2b"
	top: "bottleneck4b_branch2b"
	name: "bottleneck4b_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck4b_branch2b"
	top: "bottleneck4b_branch2c"
	name: "bottleneck4b_branch2c"
	type: "Convolution"
	convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
    }
    param {
        lr_mult: 1.0
        decay_mult: 1
    }

}

layer {
	bottom: "bottleneck4b_branch2c"
	top: "bottleneck4b_branch2c"
	name: "bn_bottleneck4b_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck4b_branch2c"
	top: "bottleneck4b_branch2c"
	name: "scale_bottleneck4b_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck4a"
	bottom: "bottleneck4b_branch2c"
	top: "bottleneck4b"
	name: "bottleneck4b"
	type: "Eltwise"
	eltwise_param {
        operation: SUM
    }
}

layer {
	bottom: "bottleneck4b"
	top: "bottleneck4b"
	name: "bottleneck4b_relu"
	type: "ReLU"
}


layer {
    name: "bottleneck4upP4"
	type: "Deconvolution"
    bottom: "bottleneck4b"
	top: "bottleneck4upP4"

    convolution_param {
    kernel_h : 8
    kernel_w : 8
    stride_h: 4
    stride_w: 4
    pad_h: 2
    pad_w: 2
    num_output: 256
    group: 256
    bias_term: false
     weight_filler {
      type: "bilinear"
    }
  }
  param { lr_mult: 0 decay_mult: 0 }

}


#=========bottleneck3upP3
layer {
	bottom: "P3"
	top: "bottleneck3a_branch2a"
	name: "bottleneck3a_branch2a"
	type: "Convolution"
	param {
        lr_mult: 1.0
        decay_mult: 1
    }
    convolution_param {
        num_output: 128
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
          }
    }
}

layer {
	bottom: "bottleneck3a_branch2a"
	top: "bottleneck3a_branch2a"
	name: "bn_bottleneck3a_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck3a_branch2a"
	top: "bottleneck3a_branch2a"
	name: "scale_bottleneck3a_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck3a_branch2a"
	top: "bottleneck3a_branch2a"
	name: "bottleneck3a_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck3a_branch2a"
	top: "bottleneck3a_branch2b"
	name: "bottleneck3a_branch2b"
	type: "Convolution"
	convolution_param {
        num_output: 128
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
    }
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
}

layer {
	bottom: "bottleneck3a_branch2b"
	top: "bottleneck3a_branch2b"
	name: "bn_bottleneck3a_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck3a_branch2b"
	top: "bottleneck3a_branch2b"
	name: "scale_bottleneck3a_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck3a_branch2b"
	top: "bottleneck3a_branch2b"
	name: "bottleneck3a_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck3a_branch2b"
	top: "bottleneck3a_branch2c"
	name: "bottleneck3a_branch2c"
	type: "Convolution"
	convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
    }
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
}

layer {
	bottom: "bottleneck3a_branch2c"
	top: "bottleneck3a_branch2c"
	name: "bn_bottleneck3a_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck3a_branch2c"
	top: "bottleneck3a_branch2c"
	name: "scale_bottleneck3a_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "P3"
	bottom: "bottleneck3a_branch2c"
	top: "bottleneck3a"
	name: "bottleneck3a"
	type: "Eltwise"
	eltwise_param {
        operation: SUM
    }
}

layer {
	bottom: "bottleneck3a"
	top: "bottleneck3a"
	name: "bottleneck3a_relu"
	type: "ReLU"
}


layer {
    name: "bottleneck3upP3"
	type: "Deconvolution"
    bottom: "bottleneck3a"
	top: "bottleneck3upP3"

    convolution_param {
    kernel_h : 4
    kernel_w : 4
    stride_h: 2
    stride_w: 2
    pad_h: 1
    pad_w: 1
    num_output: 256
    group: 256
    bias_term: false
     weight_filler {
      type: "bilinear"
    }
  }
  param { lr_mult: 0 decay_mult: 0 }

}

#========concat bottleneck5upP5 bottleneck4upP4 bottleneck3upP3 P2=============

layer {
	bottom: "bottleneck5upP5"
	bottom: "bottleneck4upP4"
	bottom: "bottleneck3upP3"
	bottom: "P2"
	top: "concat2345"
	name: "concat2345"
	type: "Concat"
	concat_param{
	    axis: 1
	}
}


#=============pose stage1===============================
#================bottleneck and keypoints prediction===============

layer {
	bottom: "concat2345"
	top: "bottleneck_key_stage1_branch2a"
	name: "bottleneck_key_stage1_branch2a"
	type: "Convolution"
	param {
        lr_mult: 1.0
        decay_mult: 1
    }
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
    }
}

layer {
	bottom: "bottleneck_key_stage1_branch2a"
	top: "bottleneck_key_stage1_branch2a"
	name: "bn_bottleneck_key_stage1_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck_key_stage1_branch2a"
	top: "bottleneck_key_stage1_branch2a"
	name: "scale_bottleneck_key_stage1_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck_key_stage1_branch2a"
	top: "bottleneck_key_stage1_branch2a"
	name: "branch_bottleneck_key_stage1_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck_key_stage1_branch2a"
	top: "bottleneck_key_stage1_branch2b"
	name: "bottleneck_key_stage1_branch2b"
	type: "Convolution"
	convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
    }
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
}

layer {
	bottom: "bottleneck_key_stage1_branch2b"
	top: "bottleneck_key_stage1_branch2b"
	name: "bn_bottleneck_key_stage1_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck_key_stage1_branch2b"
	top: "bottleneck_key_stage1_branch2b"
	name: "scale_bottleneck_key_stage1_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck_key_stage1_branch2b"
	top: "bottleneck_key_stage1_branch2b"
	name: "branch_bottleneck_key_stage1_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck_key_stage1_branch2b"
	top: "bottleneck_key_stage1_branch2c"
	name: "bottleneck_key_stage1_branch2c"
	type: "Convolution"
	convolution_param {
        num_output: 1024
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
    }
    param {
        lr_mult: 1.0
        decay_mult: 1
    }

}

layer {
	bottom: "bottleneck_key_stage1_branch2c"
	top: "bottleneck_key_stage1_branch2c"
	name: "bn_bottleneck_key_stage1_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck_key_stage1_branch2c"
	top: "bottleneck_key_stage1_branch2c"
	name: "scale_bottleneck_key_stage1_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "concat2345"
	bottom: "bottleneck_key_stage1_branch2c"
	top: "bottleneck_key_stage1"
	name: "bottleneck_key_stage1"
	type: "Eltwise"
	eltwise_param {
        operation: SUM
    }
}

layer {
	bottom: "bottleneck_key_stage1"
	top: "bottleneck_key_stage1"
	name: "bottleneck_key_stage1_relu"
	type: "ReLU"
}


#===========2 branches for bottleneck and part affinity vector===========
layer {
	bottom: "concat2345"
	top: "bottleneck_affinity_stage1_branch2a"
	name: "bottleneck_affinity_stage1_branch2a"
	type: "Convolution"
	    param {
        lr_mult: 1.0
        decay_mult: 1
    }
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
    }
}

layer {
	bottom: "bottleneck_affinity_stage1_branch2a"
	top: "bottleneck_affinity_stage1_branch2a"
	name: "bn_bottleneck_affinity_stage1_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck_affinity_stage1_branch2a"
	top: "bottleneck_affinity_stage1_branch2a"
	name: "scale_bottleneck_affinity_stage1_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck_affinity_stage1_branch2a"
	top: "bottleneck_affinity_stage1_branch2a"
	name: "branch_bottleneck_affinity_stage1_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck_affinity_stage1_branch2a"
	top: "bottleneck_affinity_stage1_branch2b"
	name: "bottleneck_affinity_stage1_branch2b"
	type: "Convolution"
	convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
    }
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
}

layer {
	bottom: "bottleneck_affinity_stage1_branch2b"
	top: "bottleneck_affinity_stage1_branch2b"
	name: "bn_bottleneck_affinity_stage1_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck_affinity_stage1_branch2b"
	top: "bottleneck_affinity_stage1_branch2b"
	name: "scale_bottleneck_affinity_stage1_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck_affinity_stage1_branch2b"
	top: "bottleneck_affinity_stage1_branch2b"
	name: "branch_bottleneck_affinity_stage1_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck_affinity_stage1_branch2b"
	top: "bottleneck_affinity_stage1_branch2c"
	name: "bottleneck_affinity_stage1_branch2c"
	type: "Convolution"
	convolution_param {
        num_output: 1024
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
    }
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
}

layer {
	bottom: "bottleneck_affinity_stage1_branch2c"
	top: "bottleneck_affinity_stage1_branch2c"
	name: "bn_bottleneck_affinity_stage1_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck_affinity_stage1_branch2c"
	top: "bottleneck_affinity_stage1_branch2c"
	name: "scale_bottleneck_affinity_stage1_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "concat2345"
	bottom: "bottleneck_affinity_stage1_branch2c"
	top: "bottleneck_affinity_stage1"
	name: "bottleneck_affinity_stage1"
	type: "Eltwise"
	eltwise_param {
        operation: SUM
    }
}

layer {
	bottom: "bottleneck_affinity_stage1"
	top: "bottleneck_affinity_stage1"
	name: "bottleneck_affinity_stage1_relu"
	type: "ReLU"
}
#================stage1 prediction and loss========================
layer {
  name: "prediction_affinity_stage1"
  type: "Convolution"
  bottom: "bottleneck_affinity_stage1"
  top: "prediction_affinity_stage1"
  param {
    lr_mult: 1.0
    decay_mult: 1
  }
  param {
    lr_mult: 2.0
    decay_mult: 0
  }
  convolution_param {
    num_output: 38
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "prediction_key_stage1"
  type: "Convolution"
  bottom: "bottleneck_key_stage1"
  top: "prediction_key_stage1"
  param {
    lr_mult: 1.0
    decay_mult: 1
  }
  param {
    lr_mult: 2.0
    decay_mult: 0
  }
  convolution_param {
    num_output: 19
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "weight_stage1_affinity"
  type: "Eltwise"
  bottom: "prediction_affinity_stage1"
  bottom: "vec_weight"
  top: "weight_stage1_affinity"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "loss_stage1_affinity"
  type: "EuclideanLoss"
  bottom: "weight_stage1_affinity"
  bottom: "label_vec"
  top: "loss_stage1_affinity"
  loss_weight: 1
}
layer {
  name: "weight_stage1_key"
  type: "Eltwise"
  bottom: "prediction_key_stage1"
  bottom: "heat_weight"
  top: "weight_stage1_key"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "loss_stage1_key"
  type: "EuclideanLoss"
  bottom: "weight_stage1_key"
  bottom: "label_heat"
  top: "loss_stage1_key"
  loss_weight: 1
}



#======concat feature, keypoint prediction , part affinity==========
layer {
	bottom: "concat2345"
	bottom: "prediction_key_stage1"
	bottom: "prediction_affinity_stage1"
	top: "concat_stage2"
	name: "concat_stage2"
	type: "Concat"
	concat_param{
	    axis: 1
	}
}

#======stage2 2 branches========================

#================bottleneck and keypoints prediction===============

layer {
	bottom: "concat_stage2"
	top: "bottleneck_key_stage2_branch2a"
	name: "bottleneck_key_stage2_branch2a"
	type: "Convolution"
	param {
        lr_mult: 1.0
        decay_mult: 1
    }
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
    }
}

layer {
	bottom: "bottleneck_key_stage2_branch2a"
	top: "bottleneck_key_stage2_branch2a"
	name: "bn_bottleneck_key_stage2_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck_key_stage2_branch2a"
	top: "bottleneck_key_stage2_branch2a"
	name: "scale_bottleneck_key_stage2_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck_key_stage2_branch2a"
	top: "bottleneck_key_stage2_branch2a"
	name: "branch_bottleneck_key_stage2_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck_key_stage2_branch2a"
	top: "bottleneck_key_stage2_branch2b"
	name: "bottleneck_key_stage2_branch2b"
	type: "Convolution"
	convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
    }
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
}

layer {
	bottom: "bottleneck_key_stage2_branch2b"
	top: "bottleneck_key_stage2_branch2b"
	name: "bn_bottleneck_key_stage2_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck_key_stage2_branch2b"
	top: "bottleneck_key_stage2_branch2b"
	name: "scale_bottleneck_key_stage2_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck_key_stage2_branch2b"
	top: "bottleneck_key_stage2_branch2b"
	name: "branch_bottleneck_key_stage2_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck_key_stage2_branch2b"
	top: "bottleneck_key_stage2_branch2c"
	name: "bottleneck_key_stage2_branch2c"
	type: "Convolution"
	convolution_param {
        num_output: 1081
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
    }
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
}

layer {
	bottom: "bottleneck_key_stage2_branch2c"
	top: "bottleneck_key_stage2_branch2c"
	name: "bn_bottleneck_key_stage2_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck_key_stage2_branch2c"
	top: "bottleneck_key_stage2_branch2c"
	name: "scale_bottleneck_key_stage2_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "concat_stage2"
	bottom: "bottleneck_key_stage2_branch2c"
	top: "bottleneck_key_stage2"
	name: "bottleneck_key_stage2"
	type: "Eltwise"
	eltwise_param {
        operation: SUM
    }
}

layer {
	bottom: "bottleneck_key_stage2"
	top: "bottleneck_key_stage2"
	name: "bottleneck_key_stage2_relu"
	type: "ReLU"
}


#===========2 branches for bottleneck and part affinity vector===========
layer {
	bottom: "concat_stage2"
	top: "bottleneck_affinity_stage2_branch2a"
	name: "bottleneck_affinity_stage2_branch2a"
	type: "Convolution"
	param {
        lr_mult: 1.0
        decay_mult: 1
    }
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
    }
    }
}

layer {
	bottom: "bottleneck_affinity_stage2_branch2a"
	top: "bottleneck_affinity_stage2_branch2a"
	name: "bn_bottleneck_affinity_stage2_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck_affinity_stage2_branch2a"
	top: "bottleneck_affinity_stage2_branch2a"
	name: "scale_bottleneck_affinity_stage2_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck_affinity_stage2_branch2a"
	top: "bottleneck_affinity_stage2_branch2a"
	name: "branch_bottleneck_affinity_stage2_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck_affinity_stage2_branch2a"
	top: "bottleneck_affinity_stage2_branch2b"
	name: "bottleneck_affinity_stage2_branch2b"
	type: "Convolution"
	convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
    }
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
}

layer {
	bottom: "bottleneck_affinity_stage2_branch2b"
	top: "bottleneck_affinity_stage2_branch2b"
	name: "bn_bottleneck_affinity_stage2_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck_affinity_stage2_branch2b"
	top: "bottleneck_affinity_stage2_branch2b"
	name: "scale_bottleneck_affinity_stage2_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "bottleneck_affinity_stage2_branch2b"
	top: "bottleneck_affinity_stage2_branch2b"
	name: "branch_bottleneck_affinity_stage2_relu"
	type: "ReLU"
}

layer {
	bottom: "bottleneck_affinity_stage2_branch2b"
	top: "bottleneck_affinity_stage2_branch2c"
	name: "bottleneck_affinity_stage2_branch2c"
	type: "Convolution"
	convolution_param {
        num_output: 1081
        kernel_size: 1
        pad: 0
        stride: 1
        bias_term: false
        weight_filler {
          type: "gaussian"
          std: 0.01
        }
    }
    param {
        lr_mult: 1.0
        decay_mult: 1
    }
}

layer {
	bottom: "bottleneck_affinity_stage2_branch2c"
	top: "bottleneck_affinity_stage2_branch2c"
	name: "bn_bottleneck_affinity_stage2_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "bottleneck_affinity_stage2_branch2c"
	top: "bottleneck_affinity_stage2_branch2c"
	name: "scale_bottleneck_affinity_stage2_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "concat_stage2"
	bottom: "bottleneck_affinity_stage2_branch2c"
	top: "bottleneck_affinity_stage2"
	name: "bottleneck_affinity_stage2"
	type: "Eltwise"
	eltwise_param {
        operation: SUM
    }
}

layer {
	bottom: "bottleneck_affinity_stage2"
	top: "bottleneck_affinity_stage2"
	name: "bottleneck_affinity_stage2_relu"
	type: "ReLU"
}

#===============stage2 prediction loss==============================
layer {
  name: "prediction_affinity_stage2"
  type: "Convolution"
  bottom: "bottleneck_affinity_stage2"
  top: "prediction_affinity_stage2"
  param {
    lr_mult: 1.0
    decay_mult: 1
  }
  param {
    lr_mult: 2.0
    decay_mult: 0
  }
  convolution_param {
    num_output: 38
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "prediction_key_stage2"
  type: "Convolution"
  bottom: "bottleneck_key_stage2"
  top: "prediction_key_stage2"
  param {
    lr_mult: 1.0
    decay_mult: 1
  }
  param {
    lr_mult: 2.0
    decay_mult: 0
  }
  convolution_param {
    num_output: 19
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "weight_stage2_affinity"
  type: "Eltwise"
  bottom: "prediction_affinity_stage2"
  bottom: "vec_weight"
  top: "weight_stage2_affinity"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "loss_stage2_affinity"
  type: "EuclideanLoss"
  bottom: "weight_stage2_affinity"
  bottom: "label_vec"
  top: "loss_stage2_affinity"
  loss_weight: 1
}
layer {
  name: "weight_stage2_key"
  type: "Eltwise"
  bottom: "prediction_key_stage2"
  bottom: "heat_weight"
  top: "weight_stage2_key"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "loss_stage2_key"
  type: "EuclideanLoss"
  bottom: "weight_stage2_key"
  bottom: "label_heat"
  top: "loss_stage2_key"
  loss_weight: 1
}


#=====================fpn inter supervised loss===============
#====P5 loss
layer {
  name: "prediction_key_P5"
  type: "Convolution"
  bottom: "newC5"
  top: "prediction_key_P5"
  param {
    lr_mult: 1.0
    decay_mult: 1
  }
  param {
    lr_mult: 2.0
    decay_mult: 0
  }
  convolution_param {
    num_output: 19
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
    name: "prediction_key_P5up"
	type: "Deconvolution"
    bottom: "prediction_key_P5"
	top: "prediction_key_P5up"

    convolution_param {
    kernel_h : 16
    kernel_w : 16
    stride_h: 8
    stride_w: 8
    pad_h: 4
    pad_w: 4
    num_output: 19
    group: 19
    bias_term: false
     weight_filler {
      type: "bilinear"
    }
  }
  param { lr_mult: 0 decay_mult: 0 }

}

layer {
  name: "weight_P5_key"
  type: "Eltwise"
  bottom: "prediction_key_P5up"
  bottom: "heat_weight"
  top: "weight_P5_key"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "loss_P5_key"
  type: "EuclideanLoss"
  bottom: "weight_P5_key"
  bottom: "label_heat"
  top: "loss_P5_key"
  loss_weight: 1
}


#=====P4 loss

layer {
  name: "prediction_key_P4"
  type: "Convolution"
  bottom: "P4"
  top: "prediction_key_P4"
  param {
    lr_mult: 1.0
    decay_mult: 1
  }
  param {
    lr_mult: 2.0
    decay_mult: 0
  }
  convolution_param {
    num_output: 19
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
    name: "prediction_key_P4up"
	type: "Deconvolution"
    bottom: "prediction_key_P4"
	top: "prediction_key_P4up"

    convolution_param {
    kernel_h : 8
    kernel_w : 8
    stride_h: 4
    stride_w: 4
    pad_h: 2
    pad_w: 2
    num_output: 19
    group: 19
    bias_term: false
     weight_filler {
      type: "bilinear"
    }
  }
  param { lr_mult: 0 decay_mult: 0 }

}

layer {
  name: "weight_P4_key"
  type: "Eltwise"
  bottom: "prediction_key_P4up"
  bottom: "heat_weight"
  top: "weight_P4_key"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "loss_P4_key"
  type: "EuclideanLoss"
  bottom: "weight_P4_key"
  bottom: "label_heat"
  top: "loss_P4_key"
  loss_weight: 1
}

#====P3 loss

layer {
  name: "prediction_key_P3"
  type: "Convolution"
  bottom: "P3"
  top: "prediction_key_P3"
  param {
    lr_mult: 1.0
    decay_mult: 1
  }
  param {
    lr_mult: 2.0
    decay_mult: 0
  }
  convolution_param {
    num_output: 19
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
    name: "prediction_key_P3up"
	type: "Deconvolution"
    bottom: "prediction_key_P3"
	top: "prediction_key_P3up"

    convolution_param {
    kernel_h : 4
    kernel_w : 4
    stride_h: 2
    stride_w: 2
    pad_h: 1
    pad_w: 1
    num_output: 19
    group: 19
    bias_term: false
     weight_filler {
      type: "bilinear"
    }
  }
  param { lr_mult: 0 decay_mult: 0 }

}

layer {
  name: "weight_P3_key"
  type: "Eltwise"
  bottom: "prediction_key_P3up"
  bottom: "heat_weight"
  top: "weight_P3_key"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "loss_P3_key"
  type: "EuclideanLoss"
  bottom: "weight_P3_key"
  bottom: "label_heat"
  top: "loss_P3_key"
  loss_weight: 1
}

#=======P2 loss

layer {
  name: "prediction_key_P2"
  type: "Convolution"
  bottom: "P2"
  top: "prediction_key_P2"
  param {
    lr_mult: 1.0
    decay_mult: 1
  }
  param {
    lr_mult: 2.0
    decay_mult: 0
  }
  convolution_param {
    num_output: 19
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}


layer {
  name: "weight_P2_key"
  type: "Eltwise"
  bottom: "prediction_key_P2"
  bottom: "heat_weight"
  top: "weight_P2_key"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "loss_P2_key"
  type: "EuclideanLoss"
  bottom: "weight_P2_key"
  bottom: "label_heat"
  top: "loss_P2_key"
  loss_weight: 1
}



